{\rtf1\mac\ansicpg10000\cocoartf824
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fswiss\fcharset77 Arial-Black;
}
{\colortbl;\red255\green255\blue255;}
\vieww10120\viewh14180\viewkind1\viewscale100
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\ql\qnatural

\f0\b\fs36 \cf0 QTKitPlayer
\f1\b0\fs24 \
\
The QTKitPlayer application demonstrates some of the power and flexibility of the QuickTime Kit framework available in Mac OS X v10.4.\
\
The document "QuickTime Kit Programming Guide" walks you through the various steps that you need to follow in order to build and run the simple media player application. You'll want to consult that document to understand how to work with the new QTKit palette and the new QuickTime Kit framework. The guide is available online in HTML and PDF formats at the Apple Documentation Reference Library website for free download.\
\
The sample code in this Xcode project is intended as a learning example for Cocoa programmers who are new to QuickTime, or who want to use the new QuickTime Kit framework provided in Mac OS X v10.4.\
\
When completed, your QTKitKPlayer application will allow you not only to open and play QuickTime movies, but also to import and export them. This added capability means that your application will be able to import and display a wide range of media types that QuickTime understands and supports in Mac OS X, including but not restricted to MP4 clips, JPEG images, and audio files. In so doing, your application moves beyond a simple media player and provides useful functionality for handling a variety of media types. \
\
You\'d5ll be able to accomplish all of this by working with Interface Builder to construct the QTKitPlayer user interface and then by adding several hundred lines of Cocoa code to your Xcode project.\
\
Beyond importing and exporting of QuickTime-supported media types, your completed QTKitPlayer application will also include editing capabilities more extensive than just cut, copy, and paste. You\'d5ll add editing features such as add, add scaled, replace, and trim, which will enable you to edit QuickTime movies with greater control and precision. You'll also have new menu items that enable you to have greater control over movie playback.\
\
If you follow the steps outlined in the "QuickTime Kit Programming Guide," you'll be able to add a Cocoa drawer with a timer to your QTKitPlayer application, as well as the capability to open and play streaming video and audio over the Web. In a later chapter of the guide, you'll learn how to add a kiosk-like capability to your player, so you can view a variety of multimedia content in a window and play that content simultaneously as audio, video, Flash, VR, or in other formats that QuickTime supports. \
\

\f0\b\fs28 Getting Started
\f2\fs26 \

\f1\b0\fs24 \
Before you get started with your QTKitPlayer project, be sure that you are running either Mac OS X v10.4 or Mac OS X v10.3 and have the following items installed on your system:\
\
* Xcode 1.1 or later (preferably Xcode 2.0) and Interface Builder 2.5 or later\
\
* The QuickTime Kit framework, which is in the Mac OS X /System/Library/Frameworks directory as QTKit.framework \
\
* The new QuickTime palette, which resides in the /Developer/Extras/Palettes directory as QTKit.palette. If you are running Mac OS X v10.4, the palette is installed automatically. If you are running Mac OS X v10.3, you will have to install it manually into the /Developer/Palettes directory, so that it appears in the Interface Builder palettes toolbar when you start up IB.\
\
*  QuickTime Player version 7 installed in Mac OS X v10.3 (Panther). QuickTime Player 7 is automatically installed as part of Mac OS X v10.4.}